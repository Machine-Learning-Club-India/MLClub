<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" ><generator uri="https://jekyllrb.com/" version="3.8.5">Jekyll</generator><link href="http://localhost:4000/feed.xml" rel="self" type="application/atom+xml" /><link href="http://localhost:4000/" rel="alternate" type="text/html" /><updated>2019-07-16T13:02:42+05:30</updated><id>http://localhost:4000/feed.xml</id><title type="html">Machine Learning Club</title><subtitle>A Community of Self-Taught ML Enthusiasts.</subtitle><entry><title type="html">Tool of the Month: How to create Scatter 2D and 3D plots using Dash by Plotly?</title><link href="http://localhost:4000/build-scatter-2d-and-3-plots-in-dash/" rel="alternate" type="text/html" title="Tool of the Month: How to create Scatter 2D and 3D plots using Dash by Plotly?" /><published>2019-03-08T00:00:00+05:30</published><updated>2019-03-08T00:00:00+05:30</updated><id>http://localhost:4000/build-scatter-2d-and-3-plots-in-dash</id><content type="html" xml:base="http://localhost:4000/build-scatter-2d-and-3-plots-in-dash/"></content><author><name>Himanshu</name><email>g.himanshu2312@gmail.com</email></author><category term="featured" /><summary type="html"></summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="http://localhost:4000/assets/images/4.jpg" /></entry><entry><title type="html">Tool of the Month: How to Build your first dashboard using Dash?</title><link href="http://localhost:4000/build-your-first-dashboard-using-Dash/" rel="alternate" type="text/html" title="Tool of the Month: How to Build your first dashboard using Dash?" /><published>2019-03-07T00:00:00+05:30</published><updated>2019-03-07T00:00:00+05:30</updated><id>http://localhost:4000/build-your-first-dashboard-using-Dash</id><content type="html" xml:base="http://localhost:4000/build-your-first-dashboard-using-Dash/"></content><author><name>Himanshu</name><email>g.himanshu2312@gmail.com</email></author><category term="featured" /><summary type="html"></summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="http://localhost:4000/assets/images/4.jpg" /></entry><entry><title type="html">Tool of the Month: How to create interactive dashboards using Dash by Plotly?</title><link href="http://localhost:4000/how-to-build-dashboard-using-dash-by-plotly/" rel="alternate" type="text/html" title="Tool of the Month: How to create interactive dashboards using Dash by Plotly?" /><published>2019-03-06T00:00:00+05:30</published><updated>2019-03-06T00:00:00+05:30</updated><id>http://localhost:4000/how-to-build-dashboard-using-dash-by-plotly</id><content type="html" xml:base="http://localhost:4000/how-to-build-dashboard-using-dash-by-plotly/">&lt;p&gt;One of the promises I made myself at the start of 2019 was that I would finish learning one new tech or one online course per month. I have already started the Machine Learning course by Tom Mitchell in January (you can find my online notes here) and still going on. For the month of February, I wanted to learn something less exhaustive and chose ‘Interactive Python Dashboards with Plotly and Dash”.&lt;/p&gt;

&lt;p&gt;Data visualization is a quick and easy way to convey the message universally. If you are looking for a way to visualize your data and share it with others, [Dash] is an excellent option. With about 100 lines of code, I built an interactive dash to analyze time series data for a financial service company. Written on top of Flask, Plotly.js, and React.js, Dash is ideal for building data visualization apps with highly custom user interfaces in pure Python. Through a couple of simple patterns, Dash abstracts away all of the technologies and protocols required to build an interactive web-based application, making this framework particularly suited for anyone who works with data in Python. It supports the OAuth authentication to secure the dashboards as well.&lt;/p&gt;

&lt;hr /&gt;

&lt;h2 id=&quot;what-is-the-difference-between-matplotlib-plotly-and-dash&quot;&gt;What is the difference between Matplotlib, Plotly, and Dash?&lt;/h2&gt;
&lt;p&gt;=&amp;gt; Matplotlib: Static Visualisation &lt;br /&gt;
=&amp;gt; Plotly: Animated visualization, generated in a file (e.g. HTML) &lt;br /&gt;
=&amp;gt; Dash: Real-Time animated visualization &lt;br /&gt;&lt;/p&gt;

&lt;hr /&gt;

&lt;h2 id=&quot;table-of-content&quot;&gt;Table of Content&lt;/h2&gt;
&lt;p&gt;Week 1:&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;/build-your-first-dashboard-using-Dash&quot;&gt;How to build your first dashboard using Dash&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;/build-scatter-2d-and-3-plots-in-dash&quot;&gt;How to build Scatter 2D and 3D plots in Dash&lt;/a&gt; &lt;br /&gt;
Week 2:&lt;/li&gt;
  &lt;li&gt;How to make Heatmaps using Dash&lt;/li&gt;
  &lt;li&gt;How to make Time Series Plots using Dash &lt;br /&gt;
Week 3:&lt;/li&gt;
  &lt;li&gt;How to make dashboard using Dash in Jupyter Notebook&lt;/li&gt;
  &lt;li&gt;Case Studies &lt;br /&gt;
Week 4:&lt;/li&gt;
  &lt;li&gt;How to Deploy Dash dashboards on various platforms&lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;

&lt;h2 id=&quot;my-notes&quot;&gt;My Notes:&lt;/h2&gt;
&lt;p&gt;Dash makes it dead-simple to build a GUI around your data analysis code. Dash app code is declarative and reactive, which makes it easy to build complex apps that contain many interactive elements. Here’s an example with 5 inputs, 3 outputs, and cross-filtering. This app was built in just 160 lines of code, all of which were Python.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/dash-app2.gif&quot; alt=&quot;gif&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Every aesthetic element of the app is customizable: The sizing, the positioning, the colors, the fonts. Dash apps are built and published in the Web, so the full power of CSS is available. While Dash apps are viewed in the web browser, you don’t have to write any Javascript or HTML. Dash provides a Python interface to a rich set of interactive web-based components.&lt;/p&gt;

&lt;p&gt;Architecture&lt;/p&gt;

&lt;hr /&gt;

&lt;h2 id=&quot;10-cool-dashboards-for-insipiration&quot;&gt;10 Cool Dashboards for Insipiration&lt;/h2&gt;

&lt;ol&gt;
  &lt;li&gt;
    &lt;p&gt;INTERACTIVE REPORT
&lt;img src=&quot;/assets/images/dash-app3.gif&quot; alt=&quot;gif&quot; /&gt;
This application recreates a Goldman Sachs report. Dash’s flexible framework lets you customize however you see fit. This dashboard is created in the brand colors and style of Goldman Sachs. See it in action: https://plot.ly/~jackp/17561.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;INTERACTIVE SPREADSHEETS
&lt;img src=&quot;/assets/images/DataTable.gif&quot; alt=&quot;gif&quot; /&gt;
Create complex, spreadsheet-driven applications with Dash DataTable. This interactive table lets you view, edit, and explore large datasets from the web browser, and is Plotly’s most complex Dash component to date. DataTable is a Dash component. For more information, visit: https://dash.plot.ly/datatable.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;SALES DASHBOARD
&lt;img src=&quot;/assets/images/salesforce.png&quot; alt=&quot;gif&quot; /&gt;
Keep tabs on your organization’s sales activity with a Dash app. Check out this traditional dashboard-style CRM application, where you can switch between multiple tabs to track leads, sales, and sources using the most appropriate charts for each scenario. Try it out: https://dash-gallery.plotly.host/dash-salesforce-crm&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;MANUFACTURING ACROSS TIME
&lt;img src=&quot;/assets/images/oil-and-gas.gif&quot; alt=&quot;gif&quot; /&gt;
Need a wide-angle view? Dash has you covered. Select the desired time range you want to explore using interactive sliders and graphs. This particular dashboard-style application displays New York State natural gas well production. See how it works: https://dash-gallery.plotly.host/dash-oil-and-gas&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;MULTI-LEVEL PIE CHARTS
&lt;img src=&quot;/assets/images/sunburst-dropdown.gif&quot; alt=&quot;gif&quot; /&gt;
Also known as sunburst graphs, these visualizations are great for displaying hierarchical data. Dash apps are interactive, so you can take your data communication a step further by exploring different data categories as the graph updates in real time. Dash sunburst graphs are a component that can be inserted in your Dash application. Learn more here: https://github.com/plotly/dash-sunburst&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;NETWORK GRAPHS
&lt;img src=&quot;/assets/images/network-events.gif&quot; alt=&quot;gif&quot; /&gt;
Understanding relationships is key to business. Whether it’s a complex supply chain, new organizational layout, product distribution, or social network, Dash network graphs are a dynamic way to explore and display complex relationships. Network graphs are a Dash component. To learn more: https://github.com/plotly/dash-network&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;TRACKING THE MARKET
&lt;img src=&quot;/assets/images/dash-web-trader.gif&quot; alt=&quot;gif&quot; /&gt;
Get a live visual on the day’s ups and downs with a Dash app like this one, which tracks the foreign exchange. Dash’s callback system enables continuous queries for the latest updates, no matter which market you’re targeting. View the demo app here: https://dash-gallery.plotly.host/dash-web-trader&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;MULTI-YEAR MAPPING
&lt;img src=&quot;/assets/images/opioid-epidemic.png&quot; alt=&quot;gif&quot; /&gt;
This Dash app shows over a decade of U.S. county-level data for exploration, and was written in less than 400 lines of Python code. You’ll see that each interaction with the sliders, map, graph, colorbar, and dropdown automatically updates the rest of the app’s features.Start exploring: https://opioid-epidemic.herokuapp.com/&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;VISUALIZE MACHINE LEARNING
&lt;img src=&quot;/assets/images/dash-live-model-training.gif&quot; alt=&quot;gif&quot; /&gt;
If you’re using machine learning to sharpen your business intelligence, an accurate model is everything. This Dash app visualizes accuracy and loss, two key factors when training your model. The real-time feedback is extremely useful, and it’s possible because Dash’s Python interface integrates so well with unstructured data and analytical code. See how it works: https://dash-gallery.plotly.host/dash-live-model-training&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;NATURAL LANGUAGE PROCESSING
&lt;img src=&quot;/assets/images/tsne.png&quot; alt=&quot;gif&quot; /&gt;
Speaking of machine learning, if you’re using it for natural language processing, you may be interested in word embeddings. This Dash app maps how often words appear near each other in a text, with regards to how often they are used. Try it yourself and get the technical details here: https://dash-gallery.plotly.host/dash-tsne&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Interactive Machine Learning Explorer
&lt;img src=&quot;/assets/images/tsne-machine.gif&quot; alt=&quot;gif&quot; /&gt;
This is an interactive machine learning explorer for clustering data with t-distributed stochastic neighbor embedding (t-SNE). Published by Van der Maaten and Hinton in 2008, t-SNE is an algorithm that reduces a high-dimensional space into two or three dimensions, so we can more easily see how data is clustered. UMAP has been reported as an alternative clustering method to t-SNE recently — can you make a Dash app that clusters data using UMAP? https://dash-tsne.herokuapp.com/&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;UFC MMA Predictor Web App
&lt;img src=&quot;/assets/images/mma.gif&quot; alt=&quot;gif&quot; /&gt;
This Dash app has had some success predicting UFC (“Ultimate Fighting Championship”) match outcomes. https://ufcmmapredictor.herokuapp.com/&lt;/p&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;hr /&gt;

&lt;p&gt;I highly recommend Plotly as a visualization toolkit. Well, I will be giving up Matplotlib and taking up Plotly for a very long period of time now!&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;Further Resources and Footnotes&lt;/p&gt;
&lt;ol&gt;
  &lt;li&gt;Dash User Guide https://plot.ly/dash&lt;/li&gt;
  &lt;li&gt;Plotly GitHub https://github.com/plotly&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Follow Plotly on Instagram: https://instagram.com/machine.learning.club&lt;/p&gt;</content><author><name>Himanshu</name><email>g.himanshu2312@gmail.com</email></author><category term="featured" /><summary type="html">One of the promises I made myself at the start of 2019 was that I would finish learning one new tech or one online course per month. I have already started the Machine Learning course by Tom Mitchell in January (you can find my online notes here) and still going on. For the month of February, I wanted to learn something less exhaustive and chose ‘Interactive Python Dashboards with Plotly and Dash”.</summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="http://localhost:4000/assets/images/plotly.png" /></entry><entry><title type="html">Quick-start Guide to R for Actuaries!</title><link href="http://localhost:4000/welcome-to-quick-start-guide-to-r-for-actuaries/" rel="alternate" type="text/html" title="Quick-start Guide to R for Actuaries!" /><published>2019-02-04T00:00:00+05:30</published><updated>2019-02-04T00:00:00+05:30</updated><id>http://localhost:4000/welcome-to-quick-start-guide-to-r-for-actuaries</id><content type="html" xml:base="http://localhost:4000/welcome-to-quick-start-guide-to-r-for-actuaries/">&lt;p&gt;It has become necessary for an actuary (professionals as well as students) to leverage the power of data in their day-to-day analysis. From GLM models in pricing to claims fraud analysis, everything requires handling the huge data for which MS-Excel is no longer optimum. R programming has gained importance not only to handle data for analysis but for the current world of Machine Learning. This guide will help you to learn the basics of R programming required to handle the data in R. If you already know basics of R programming, you can skip ahead and start with ‘Quick-start guide to Machine Learning for Actuaries’ to understand how the knowledge of statistics &amp;amp; probability can be extended to building machine learning models like fraud analysis.&lt;/p&gt;

&lt;p&gt;Based on your level of expertise in R, you can start learning from the following blogs.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Beginners&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;R programming for Actuaries&lt;/li&gt;
  &lt;li&gt;Getting started with analytics in R&lt;/li&gt;
  &lt;li&gt;Basic of Probability and Statistics in R&lt;/li&gt;
  &lt;li&gt;Getting started with ML- An introduction to demystify the topic for actuaries.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;Intermediate&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;R programming for intermediates&lt;/li&gt;
  &lt;li&gt;5 analytics an actuary can do for an insurance company&lt;/li&gt;
  &lt;li&gt;Statistical Learning on the real world data&lt;/li&gt;
  &lt;li&gt;5 predictive models for Insurance Industry&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;Advanced&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;Coming Soon&lt;/li&gt;
&lt;/ul&gt;</content><author><name>Himanshu</name><email>g.himanshu2312@gmail.com</email></author><category term="quick-start guide" /><summary type="html">It has become necessary for an actuary (professionals as well as students) to leverage the power of data in their day-to-day analysis. From GLM models in pricing to claims fraud analysis, everything requires handling the huge data for which MS-Excel is no longer optimum. R programming has gained importance not only to handle data for analysis but for the current world of Machine Learning. This guide will help you to learn the basics of R programming required to handle the data in R. If you already know basics of R programming, you can skip ahead and start with ‘Quick-start guide to Machine Learning for Actuaries’ to understand how the knowledge of statistics &amp;amp; probability can be extended to building machine learning models like fraud analysis.</summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="http://localhost:4000/assets/images/demo1.jpg" /></entry><entry><title type="html">Introduction to ML for Actuaries - Part II: What are Decision Trees?</title><link href="http://localhost:4000/what-are-decision-trees-for-actuaries/" rel="alternate" type="text/html" title="Introduction to ML for Actuaries - Part II: What are Decision Trees?" /><published>2019-02-03T00:00:00+05:30</published><updated>2019-02-03T00:00:00+05:30</updated><id>http://localhost:4000/what-are-decision-trees-for-actuaries</id><content type="html" xml:base="http://localhost:4000/what-are-decision-trees-for-actuaries/">&lt;p&gt;Welcome to part II in the series Machine Learning for Actuaries. In part I, we covered how to understand the General Problem Settings in Machine Learning. We also talked about what the Hypothesis Set is. For the sake of this blog, we will consider decision trees (all possible decision trees) as our hypothesis set.&lt;/p&gt;

&lt;p&gt;We will cover how decision trees work and see a working example to implement decision trees in R. Please access it from the link below.&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;You use decision trees in a way in your life all the time, but very basic ones. Let’s say you stay in Mumbai, its August and you are going out, you would have to decide whether to take your umbrella with you or not because it might rain. Any Mumbaikar would suggest that you should carry an umbrella during August. But say you are just visiting Mumbai and you do not have any idea, what would you do? It is a typical decision tree problem statement. Let’s formulate this problem in a mathematical statement:&lt;/p&gt;

&lt;p&gt;Let’s say you have &amp;lt; Location, Month, Temperature&amp;gt; as covariates to decide whether to take an umbrella with you or not and the response variable is “Take Umbrella”. What we want to do is to approximate a function f such that:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;                *f* : &amp;lt; Location, Month, Temperature&amp;gt; → Take Umbrella
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;based on the data collected from people living in Mumbai and Delhi. We will get into that process of making decision trees later. But let’s look at what the output will look like.
&lt;img src=&quot;/assets/images/what-are-decision-trees-for-actuaries/1.png&quot; alt=&quot;decision tree&quot; /&gt;&lt;/p&gt;

&lt;hr /&gt;

&lt;h3 id=&quot;terminology-related-to-decisiontrees&quot;&gt;Terminology related to Decision Trees:&lt;/h3&gt;
&lt;p&gt;Let’s look at the basic terminology used with Decision trees:&lt;br /&gt;
&lt;strong&gt;ROOT Node&lt;/strong&gt;: It represents the entire population or sample and this further gets divided into two or more homogeneous sets.&lt;br /&gt;
&lt;strong&gt;SPLITTING&lt;/strong&gt;: It is a process of dividing a node into two or more sub-nodes.&lt;br /&gt;
&lt;strong&gt;Decision Node&lt;/strong&gt;: When a sub-node splits into further sub-nodes, then it is called a decision node.&lt;br /&gt;
&lt;strong&gt;Leaf/ Terminal Node&lt;/strong&gt;: Nodes do not split is called Leaf or Terminal node.&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;In the above example:&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;Each Internal Node (Boxes) tests 1 attribute of the data point (xi)&lt;/li&gt;
  &lt;li&gt;Each Branch Node (Arrows) selects 1 value of data point (xi)&lt;/li&gt;
  &lt;li&gt;Each Leaf Node (Bottom most arrows in Tree) predicts Output (Y)&lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;

&lt;h3 id=&quot;problem-setting-would-be&quot;&gt;Problem Setting would be:&lt;/h3&gt;
&lt;p&gt;Set of possible instances of X&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;Each instance x in X is a feature vector of &amp;lt;Location, Month, Temperature&amp;gt;
Unknown Target function &lt;em&gt;f&lt;/em&gt;: X → Y&lt;/li&gt;
  &lt;li&gt;Y is discrete valued ( ‘Yes’ or ‘No’)
Set of function Hypothesis H = {h|h: X → Y}&lt;/li&gt;
  &lt;li&gt;each hypothesis (h) in the Hypothesis set (H) is a decision tree&lt;/li&gt;
  &lt;li&gt;trees sort X to leaf, which assigns the value to Y.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Note: We cannot use Decision Trees in the form described here to predict the continuous target variables. In order to do so, we have to alter the algorithm.&lt;/p&gt;

&lt;hr /&gt;

&lt;h3 id=&quot;top-down-method-of-making-decision-trees&quot;&gt;Top-Down method of making decision trees&lt;/h3&gt;
&lt;p&gt;Now that you have understood the decision trees and we have written our problem statement in the form of Problem Setting for machine learning, Let’s talk about how can we build an algorithm for decision trees?&lt;/p&gt;

&lt;p&gt;node = Root
Main Loop:&lt;/p&gt;
&lt;ol&gt;
  &lt;li&gt;Select an attribute ‘A’ (the best decision attribute for the next node)&lt;/li&gt;
  &lt;li&gt;Assign ‘A’ as a decision attribute for the node&lt;/li&gt;
  &lt;li&gt;For each value of A create a new descendant of Node&lt;/li&gt;
  &lt;li&gt;Sort training examples to leaf nodes&lt;/li&gt;
  &lt;li&gt;If training examples can be perfectly classified at this leaf node, then stop, else go to the new leaf nodes created and consider them node and repeat the steps till you get perfect classification on all leaf nodes.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;strong&gt;Question 1: Which attribute is the best?&lt;/strong&gt;
To answer that, let’s take an illustration. Suppose we have a dataset where the Target variable takes ‘Yes’ 29 times and ‘No’ 35 times. We can either split on attribute A1 or A2. The node looks like as in the image:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/what-are-decision-trees-for-actuaries/2.png&quot; alt=&quot;tree diagram&quot; /&gt;&lt;/p&gt;

&lt;p&gt;So A1 attribute creates 2 leaf nodes- Leaf Node 1 has classified most of the examples as positive and 5 negatives (No) and Leaf Node 2 has done the same thing, classified most examples as negative and a few as positives.&lt;/p&gt;

&lt;p&gt;On the other hand A2 attribute’s 2 leaf nodes- Leaf node 2 has classified mostly but Leaf Node 1 has proportionated +ve and negatives, hence not a very useful Node.&lt;/p&gt;

&lt;p&gt;A1 attribute is doing a better job than A2. Although the second decision tree might be able to classify the Target function very well once split on any other attribute, on the current stage A1 attribute is performing better. What we did is Greedily selected the attribute which makes the better split or more Homogeneous Leaf Node (Homogeneous is the exact term used). Thus, Decision Trees are known as greedy algorithms for classification.&lt;/p&gt;

&lt;p&gt;Now you would say that it is easy for a human to recognize if the leaf node is Homogeneous, but how will computer get to know this? That leads to my next question&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Question 2: How to define “Homogeneity” mathematically? Define a statistic to give information on how Homogeneous the data is?&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;The answer is Entropy. 
The Entropy of a random variable is defined as :&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/what-are-decision-trees-for-actuaries/3.png&quot; alt=&quot;entropy equation&quot; /&gt;&lt;/p&gt;

&lt;p&gt;where n is all possible values of X.&lt;/p&gt;</content><author><name>Himanshu</name><email>g.himanshu2312@gmail.com</email></author><summary type="html">Welcome to part II in the series Machine Learning for Actuaries. In part I, we covered how to understand the General Problem Settings in Machine Learning. We also talked about what the Hypothesis Set is. For the sake of this blog, we will consider decision trees (all possible decision trees) as our hypothesis set.</summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="http://localhost:4000/assets/images/decision-tree-home.png" /></entry><entry><title type="html">The first mass-produced book to deviate from a rectilinear format</title><link href="http://localhost:4000/first-mass-produced/" rel="alternate" type="text/html" title="The first mass-produced book to deviate from a rectilinear format" /><published>2019-02-02T00:00:00+05:30</published><updated>2019-02-02T00:00:00+05:30</updated><id>http://localhost:4000/first-mass-produced</id><content type="html" xml:base="http://localhost:4000/first-mass-produced/">&lt;p&gt;The first mass-produced book to deviate from a rectilinear format, at least in the United States, is thought to be this 1863 edition of Red Riding Hood, cut into the shape of the protagonist herself with the troublesome wolf curled at her feet. Produced by the Boston-based publisher Louis Prang, this is the first in their “Doll Series”, a set of five “die-cut” books, known also as shape books — the other titles being Robinson Crusoe, Goody Two-Shoes (also written by Red Riding Hood author Lydia Very), Cinderella, and King Winter.&lt;/p&gt;

&lt;p&gt;An 1868 Prang catalogue would later claim that such “books in the shape of a regular paper Doll… originated with us”.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;It would seem the claim could also extend to die cut books in general, as we can’t find anything sooner, but do let us know in the comments if you have further light to shed on this! Such books are, of course, still popular in children’s publishing today, though the die cutting is not now limited to mere outlines, as evidenced in a beautiful 2014 version of the same Little Red Riding Hood story.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;The die cut has also been employed in the non-juvenile sphere as well, a recent example being Jonathan Safran Foer’s ambitious Tree of Codes.&lt;/p&gt;

&lt;p&gt;As for this particular rendition of Charles Perrault’s classic tale, the text and design is by Lydia Very (1823-1901), sister of Transcendentalist poet Jones Very. The gruesome ending of the original - which sees Little Red Riding Hood being gobbled up as well as her grandmother - is avoided here, the gore giving way to the less bloody aims of the morality tale, and the lesson that one should not disobey one’s mother.&lt;/p&gt;

&lt;p&gt;To deviate from a rectilinear format, at least in the United States, is thought to be this 1863 edition of Red Riding Hood, cut into the shape of the protagonist herself with the troublesome wolf curled at her feet. Produced by the Boston-based publisher Louis Prang, this is the first in their “Doll Series”, a set of five “die-cut” books, known also as shape books — the other titles being Robinson Crusoe, Goody Two-Shoes (also written by Red Riding Hood author Lydia Very), Cinderella, and King Winter.&lt;/p&gt;

&lt;p&gt;An 1868 Prang catalogue would later claim that such “books in the shape of a regular paper Doll… originated with us”.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;The claim could also extend to die cut books in general, as we can’t find anything sooner, but do let us know in the comments if you have further light to shed on this! Such books are, of course, still popular in children’s publishing today, though the die cutting is not now limited to mere outlines, as evidenced in a beautiful 2014 version of the same Little Red Riding Hood story.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;The die cut has also been employed in the non-juvenile sphere as well, a recent example being Jonathan Safran Foer’s ambitious Tree of Codes.&lt;/p&gt;

&lt;p&gt;As for this particular rendition of Charles Perrault’s classic tale, the text and design is by Lydia Very (1823-1901), sister of Transcendentalist poet Jones Very. The gruesome ending of the original - which sees Little Red Riding Hood being gobbled up as well as her grandmother - is avoided here, the gore giving way to the less bloody aims of the morality tale, and the lesson that one should not disobey one’s mother.&lt;/p&gt;</content><author><name>sal</name></author><category term="featured" /><summary type="html">The first mass-produced book to deviate from a rectilinear format, at least in the United States, is thought to be this 1863 edition of Red Riding Hood, cut into the shape of the protagonist herself with the troublesome wolf curled at her feet. Produced by the Boston-based publisher Louis Prang, this is the first in their “Doll Series”, a set of five “die-cut” books, known also as shape books — the other titles being Robinson Crusoe, Goody Two-Shoes (also written by Red Riding Hood author Lydia Very), Cinderella, and King Winter.</summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="http://localhost:4000/assets/images/17.jpg" /></entry><entry><title type="html">Education must also train one for quick, resolute and effective thinking.</title><link href="http://localhost:4000/education/" rel="alternate" type="text/html" title="Education must also train one for quick, resolute and effective thinking." /><published>2019-02-01T00:00:00+05:30</published><updated>2019-02-01T00:00:00+05:30</updated><id>http://localhost:4000/education</id><content type="html" xml:base="http://localhost:4000/education/">&lt;p&gt;There are lots of powerful things you can do with the Markdown editor&lt;/p&gt;

&lt;p&gt;If you’ve gotten pretty comfortable with writing in Markdown, then you may enjoy some more advanced tips about the types of things you can do with Markdown!&lt;/p&gt;

&lt;p&gt;As with the last post about the editor, you’ll want to be actually editing this post as you read it so that you can see all the Markdown code we’re using.&lt;/p&gt;

&lt;h2 id=&quot;special-formatting&quot;&gt;Special formatting&lt;/h2&gt;

&lt;p&gt;As well as bold and italics, you can also use some other special formatting in Markdown when the need arises, for example:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;del&gt;strike through&lt;/del&gt;&lt;/li&gt;
  &lt;li&gt;==highlight==&lt;/li&gt;
  &lt;li&gt;*escaped characters*&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;writing-code-blocks&quot;&gt;Writing code blocks&lt;/h2&gt;

&lt;p&gt;There are two types of code elements which can be inserted in Markdown, the first is inline, and the other is block. Inline code is formatted by wrapping any word or words in back-ticks, &lt;code class=&quot;highlighter-rouge&quot;&gt;like this&lt;/code&gt;. Larger snippets of code can be displayed across multiple lines using triple back ticks:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;.my-link {
    text-decoration: underline;
}
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;If you want to get really fancy, you can even add syntax highlighting using Rouge.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/8.jpg&quot; alt=&quot;walking&quot; /&gt;&lt;/p&gt;

&lt;h2 id=&quot;reference-lists&quot;&gt;Reference lists&lt;/h2&gt;

&lt;p&gt;The quick brown jumped over the lazy.&lt;/p&gt;

&lt;p&gt;Another way to insert links in markdown is using reference lists. You might want to use this style of linking to cite reference material in a Wikipedia-style. All of the links are listed at the end of the document, so you can maintain full separation between content and its source or reference.&lt;/p&gt;

&lt;h2 id=&quot;full-html&quot;&gt;Full HTML&lt;/h2&gt;

&lt;p&gt;Perhaps the best part of Markdown is that you’re never limited to just Markdown. You can write HTML directly in the Markdown editor and it will just work as HTML usually does. No limits! Here’s a standard YouTube embed code as an example:&lt;/p&gt;

&lt;p&gt;&lt;iframe style=&quot;width:100%;&quot; height=&quot;315&quot; src=&quot;https://www.youtube.com/embed/Cniqsc9QfDo?rel=0&amp;amp;showinfo=0&quot; frameborder=&quot;0&quot; allowfullscreen=&quot;&quot;&gt;&lt;/iframe&gt;&lt;/p&gt;</content><author><name>Himanshu</name></author><summary type="html">There are lots of powerful things you can do with the Markdown editor</summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="http://localhost:4000/assets/images/3.jpg" /></entry><entry><title type="html">Accumulated experience of social living</title><link href="http://localhost:4000/acumulated-experience/" rel="alternate" type="text/html" title="Accumulated experience of social living" /><published>2019-01-30T00:00:00+05:30</published><updated>2019-01-30T00:00:00+05:30</updated><id>http://localhost:4000/acumulated-experience</id><content type="html" xml:base="http://localhost:4000/acumulated-experience/">&lt;p&gt;The die cut has also been employed in the non-juvenile sphere as well, a recent example being Jonathan Safran Foer’s ambitious Tree of Codes.&lt;/p&gt;

&lt;p&gt;As for this particular rendition of Charles Perrault’s classic tale, the text and design is by Lydia Very (1823-1901), sister of Transcendentalist poet Jones Very. The gruesome ending of the original - which sees Little Red Riding Hood being gobbled up as well as her grandmother - is avoided here, the gore giving way to the less bloody aims of the morality tale, and the lesson that one should not disobey one’s mother.&lt;/p&gt;

&lt;p&gt;The first mass-produced book to deviate from a rectilinear format, at least in the United States, is thought to be this 1863 edition of Red Riding Hood, cut into the shape of the protagonist herself with the troublesome wolf curled at her feet. Produced by the Boston-based publisher Louis Prang, this is the first in their “Doll Series”, a set of five “die-cut” books, known also as shape books — the other titles being Robinson Crusoe, Goody Two-Shoes (also written by Red Riding Hood author Lydia Very), Cinderella, and King Winter.&lt;/p&gt;

&lt;p&gt;An 1868 Prang catalogue would later claim that such “books in the shape of a regular paper Doll… originated with us”.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;It would seem the claim could also extend to die cut books in general, as we can’t find anything sooner, but do let us know in the comments if you have further light to shed on this! Such books are, of course, still popular in children’s publishing today, though the die cutting is not now limited to mere outlines, as evidenced in a beautiful 2014 version of the same Little Red Riding Hood story.&lt;/p&gt;
&lt;/blockquote&gt;</content><author><name>sal</name></author><summary type="html">The die cut has also been employed in the non-juvenile sphere as well, a recent example being Jonathan Safran Foer’s ambitious Tree of Codes.</summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="http://localhost:4000/assets/images/15.jpg" /></entry><entry><title type="html">About Bundler</title><link href="http://localhost:4000/about-bundler/" rel="alternate" type="text/html" title="About Bundler" /><published>2019-01-29T00:00:00+05:30</published><updated>2019-01-29T00:00:00+05:30</updated><id>http://localhost:4000/about-bundler</id><content type="html" xml:base="http://localhost:4000/about-bundler/">&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;gem install bundler&lt;/code&gt; installs the bundler gem through RubyGems. You only need to install it once - not every time you create a new Jekyll project. Here are some additional details:&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;bundler&lt;/code&gt; is a gem that manages other Ruby gems. It makes sure your gems and gem versions are compatible, and that you have all necessary dependencies each gem requires.&lt;/p&gt;

&lt;p&gt;The &lt;code class=&quot;highlighter-rouge&quot;&gt;Gemfile&lt;/code&gt; and &lt;code class=&quot;highlighter-rouge&quot;&gt;Gemfile.lock&lt;/code&gt; files inform &lt;code class=&quot;highlighter-rouge&quot;&gt;Bundler&lt;/code&gt; about the gem requirements in your site. If your site doesn’t have these Gemfiles, you can omit &lt;code class=&quot;highlighter-rouge&quot;&gt;bundle exec&lt;/code&gt; and just &lt;code class=&quot;highlighter-rouge&quot;&gt;run jekyll serve&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;When you run &lt;code class=&quot;highlighter-rouge&quot;&gt;bundle exec jekyll serve&lt;/code&gt;, &lt;code class=&quot;highlighter-rouge&quot;&gt;Bundler&lt;/code&gt; uses the gems and versions as specified in &lt;code class=&quot;highlighter-rouge&quot;&gt;Gemfile.lock&lt;/code&gt; to ensure your Jekyll site builds with no compatibility or dependency conflicts.&lt;/p&gt;

&lt;p&gt;For more information about how to use &lt;code class=&quot;highlighter-rouge&quot;&gt;Bundler&lt;/code&gt; in your Jekyll project, this tutorial should provide answers to the most common questions and explain how to get up and running quickly.&lt;/p&gt;</content><author><name>sal</name></author><summary type="html">gem install bundler installs the bundler gem through RubyGems. You only need to install it once - not every time you create a new Jekyll project. Here are some additional details:</summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="http://localhost:4000/assets/images/2.jpg" /></entry><entry><title type="html">We all wait for summer</title><link href="http://localhost:4000/we-all-wait-for-summer/" rel="alternate" type="text/html" title="We all wait for summer" /><published>2019-01-28T00:00:00+05:30</published><updated>2019-01-28T00:00:00+05:30</updated><id>http://localhost:4000/we-all-wait-for-summer</id><content type="html" xml:base="http://localhost:4000/we-all-wait-for-summer/">&lt;p&gt;This is changed. As I engage in the so-called “bull sessions” around and about the school, I too often find that most college men have a misconception of the purpose of education. Most of the “brethren” think that &lt;a href=&quot;#&quot;&gt;education should equip&lt;/a&gt; them with the proper instruments of exploitation so that they can forever trample over the masses. Still others think that education should furnish them with noble ends rather than means to an end.&lt;/p&gt;

&lt;p&gt;It seems to me that education has a two-fold function to perform in the life of man and in society: the one is utility and the other is culture. Education must enable a man to become more efficient, to achieve with increasing facility the ligitimate goals of his life.&lt;/p&gt;</content><author><name>Jane</name><email>fakemail@gmail.com</email></author><category term="featured" /><summary type="html">This is changed. As I engage in the so-called “bull sessions” around and about the school, I too often find that most college men have a misconception of the purpose of education. Most of the “brethren” think that education should equip them with the proper instruments of exploitation so that they can forever trample over the masses. Still others think that education should furnish them with noble ends rather than means to an end.</summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="http://localhost:4000/assets/images/1.jpg" /></entry></feed>